<!DOCTYPE html>
<html lang="zh-cn"><head>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<meta charset="utf-8">
<meta name="robots" content="all">
<meta name="author" content="w3school.com.cn">
<link rel="stylesheet" type="text/css" href="helper/developer/style.css">
<link href="cos.ico" rel="shortcut icon" type="image/x-icon">
</head>
<body>
	
	<div id="maincontent" style="text-align: left; width: 732px;">

		<h1>总体介绍</h1>

		<div id="intro">
		<h2>关于 COS云架构开放式应用服务系统</h2>

		<p>COS-基于JAVA的应用服务平台框架，是经过总结多年开发经验，通过各种类型项目实践考验，基于J2EE框架思想，形成的一套能够开发各种类型应用系统的软件开发框架。COS具备跨平台、多进程、分布式等特性。平台核心引擎模块是JAVA语言开发的，能够在各种硬件服务器环境下运行，除了JAVA语言开发的模块之外其他诸如C语言程序、服务器脚本都可以在平台框架下控制运行；多进程特性保证业务逻辑之间各自拥有各自的入口，模块进程之间相对独立耦合性低，进程的启动停止由主控模块进程控制，通过文件进行配置，每个进程的启动可以为其分配内存实现资源合理分配；分布式特性让应用服务系统的部署灵活方便，可以将各种应用服务根据性能负载、服务层次、功能类别等条件进行配置，实现服务器性能最大利用率。</p>

		<span><img src='../../images/developer/001.png'></span>

		<p>如图所示，COS是一种融合了面向服务SOA架构体系、B/S结构多层框架体系、J2EE框架体系，WEBSERVICE技术等多种架构思想与技术的集合。在这种架构体系下可以实现研发工作最大的复用性与灵活性。研发人员面对用户需求时，不需要考虑太多程序架构设计的问题，以及程序运行所涉及的性能问题，只需围绕用户需求开发独立的业务引擎模块即可完成开发任务，降低了对研发人员开发能力的要求，同时从平台架构层面保障了系统的稳定性与质量。COS提供了大量可重用的组件、模块、方法，特别是对文件操作、多线程处理、Socket通讯等技术的积累，研发人员将从纷繁复杂的技术问题中解脱出来，将更多的精力投入到业务的理解与研究中，将提升用户对产品的满意度。</p>
		</div>

	</div>

<!-- wrapper end -->
</body>
</html>